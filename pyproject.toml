[tool.poetry]
name = "trade-executor"
version = "0.3.2"
description = "Algorithmic trading backtesting and live trading engine for decentralised finance"
authors = ["Mikko Ohtamaa <mikko@tradingstrategy.ai>"]
homepage = "https://tradingstrategy.ai"
repository = "https://github.com/tradingstrategy-ai/trade-executor"
license = "APGL"
readme = "README.md"
keywords = ["algorithmic trading", "ethereum", "cryptocurrency", "uniswap", "quantitative finance", "binance", "coinbase", "pancakeswap"]
packages = [
    { include = "tradeexecutor" },
]
[tool.poetry.dependencies]
python = ">=3.11,<=3.12"

# Use these during development
# TODO: FileLock, Parquet None issueset
trading-strategy = {path = "deps/trading-strategy", develop = true}
# trading-strategy = "^0.22.6"
requests = "^2.27.1"
matplotlib = ">=3.5"
jupyterlab = "^4.0.7"
pandas = "<3"
pandas-ta = "^0.3.14b"  # Unmaintained, still stick to old Pandas
tqdm-loggable = "^0.2"
numpy = "<2"  # https://stackoverflow.com/a/78638258/315168

web3-ethereum-defi = {path = "deps/web3-ethereum-defi", develop = true, extras=["data", "test"]}

# AttributeError: 'MathBlockParser' object has no attribute 'parse_axt_heading'
# https://github.com/lepture/mistune/issues/403
# https://github.com/jupyter/nbconvert/issues/2198
mistune = "<3.1"


#
# Execution deps
#
typer = {version="^0.12.3", optional = true}
colorama = {version="^0.4.4", optional = true}
coloredlogs = {version="^15.0.1", optional = true}
prompt-toolkit = {version = "^3.0.31", optional = true}
APScheduler = {version="^3.9.1"}
#python-logstash-tradingstrategy = {version="^0.5.0", optional = true}
python-logstash-tradingstrategy = "0.5.1"
python-logging-discord-handler = {version="^0.1.3", optional = true}
python-dotenv = {version="^0.21.0", optional = true}
kaleido = {version="0.2.1"}
beautifulsoup4 = {version="^4.12.2", optional = true}  # Needed to export HTML reports

#
# Web server deps
#
pyramid = {version="^2.0", optional = true}
pyramid-openapi3 = "0.20.1"
waitress = {version="^2.0.0", optional = true}
WebTest = {version="^3.0.0", optional = true}
# python-openapi3 incompatible with newer versions
# openapi-core = {version = "<0.17", optional = true}

#
# Legacy strategy deps
#
trading-strategy-qstrader = {version="^0.5",  optional = true}

#
# quantstats package for generating
# advanced statistical reports
#
quantstats = {version="^0.0.62"}

# File ~/Library/Caches/pypoetry/virtualenvs/trade-executor-kk5ZLC7w-py3.11/lib/python3.11/site-packages/quantstats/utils.py:300, in _in_notebook(matplotlib_inline)
#    297 if shell == "ZMQInteractiveShell":
#    298     # Jupyter notebook or qtconsole
#    299     if matplotlib_inline:
#--> 300         get_ipython().magic("matplotlib inline")
ipython = "<9"
lxml = "^5.3"

# Needed for Plotly Express scatter(trendline="ols)
# https://www.statsmodels.org/stable/index.html
statsmodels = {version="^0.14.0"}

#
# This package is to be used in various environemnts
# - Execution oracles (makes trades)
# - Client side Python within a browser
# - Web server
#
# Note: in the future execution may exist without a web server,
# e.g. in-browser  bots.
#
tqdm = "^4.64.1"
tblib = "^1.7.0"
cloudpickle = "^3.0.0"
scikit-optimize = "^0.10.2"


#
# TrendsSpotter and sentiment data analysis integration
#
#
gcsfs = {version="^2024.6.1",  optional = true}
google-cloud-storage = {version="^2.17.0",  optional = true}
fsspec = {version="^2024.6.1",  optional = true}
google-auth =  {version="^2.32.0",  optional = true}
zstandard = "^0.23.0"
pytest-timeout = "^2.3.1"

#
# Demeter
# https://github.com/zelos-alpha/demeter
#

# TODO: Disabled. Install wiht pip until dependency version incompatibilies are solved.
 zelos-demeter = {version="^0.7.4",  optional = true}

# https://github.com/arynyklas/telegram_bot_logger/pull/1
telegram-bot-logger = {git = "https://github.com/tradingstrategy-ai/telegram_bot_logger.git", branch="main", optional = true}
openapi-core = "0.19.1"




[tool.poetry.extras]

# Legacy strats
qstrader = ["trading-strategy-qstrader"]

# Only needed when running live trades
execution = [
    "python-logging-discord-handler",
    "telegram-bot-logger",
    "python-logstash-tradingstrategy",
    "typer",
    "colorama",
    "coloredlogs",
    "prompt-toolkit",
    "python-dotenv",
    "setuptools",
    "beautifulsoup4",
    "web3-ethereum-defi",
]

# These dependencies are not neededon the client side code
web-server = [
    "pyramid",
    "WebTest",
    "openapi-core",
    "pyramid-openapi3",
    "waitress"
]

# Trendspotter and sentiment data integration
trendsspotter = [
    "gcsfs",
    "google-cloud-storage",
    "fsspec",
    "google-auth"
]

# for generating advanced statistical reports
# quantstats = ["quantstats"]

# Demeter LP backtesting integration
demeter = [
    "zelos-demeter",
]

[tool.poetry.dev-dependencies]
pytest = "^7.2.2"
ipdb = "^0.13.9"
flaky = "^3.7.0"

[tool.poetry.group.dev.dependencies]
pytest-reverse = "^1.5.0"
pytest-mock = "^3.11.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
trade-executor = 'tradeexecutor.cli.main:app'
get-latest-release = 'tradeexecutor.cli.latest_release:main'
prepare-docker-env = 'tradeexecutor.cli.prepare_docker_env:main'

[tool.pytest.ini_options]
addopts = "-s --tb=native"
testpaths = [
    "tests",
]

# Do not let pytest to crawl into deps/ subprojects
# that contain tests and are independent from us
# https://stackoverflow.com/a/58306308/315168
norecursedirs="deps/*"

markers = [
    "slow_test_group: manually separated group of tests that take individually long time to run"
]
filterwarnings = [
    # python_openapi complaint
    "ignore:::.*.jsonschema",
    # DeprecationWarning: Subclassing validator classes is not intended to be part of their public API. A future version will make doing so an error, as the behavior of subclasses isn't guaranteed to stay the same between releases of jsonschema. Instead, prefer composition of validators, wrapping them in an object owned entirely by the downstream library.
    "ignore:::.*.validators",
    "ignore:::.*.codec",
    "ignore::DeprecationWarning:openapi_spec_validator.*:",
    #  DeprecationWarning: abi.decode_single() is deprecated and will be removed in version 4.0.0 in favor of abi.decode()
    "ignore::DeprecationWarning:eth_abi.*:",
    "ignore::DeprecationWarning:eth_tester.*:",
    "ignore::DeprecationWarning:pandas.*:",
    "ignore::DeprecationWarning:quantstats.*:",
    "ignore::DeprecationWarning:pkg_resources.*:",
]
